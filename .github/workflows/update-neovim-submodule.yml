name: Update Neovim Submodule
on:
  push:
    branches:
      - main
    paths:
      - 'configs/nvim/**'
  repository_dispatch:
    types: [neovim-updated]
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-submodule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Git config
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check and update submodule
        run: |
          # Initialize and update the submodule
          git submodule init
          git submodule update

          # Go to submodule directory and fetch latest changes
          cd configs/nvim
          git fetch origin
          SUBMODULE_DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
          CURRENT_SHA=$(git rev-parse HEAD)
          LATEST_SHA=$(git rev-parse origin/$SUBMODULE_DEFAULT_BRANCH)

          echo "Current submodule SHA: $CURRENT_SHA"
          echo "Latest submodule SHA: $LATEST_SHA"

          # Fetch and display the Git log
          echo "Fetching git log for the submodule..."
          GIT_LOG=$(git log -n 10)

          if [ "$CURRENT_SHA" != "$LATEST_SHA" ]; then
            cd ..
            git submodule update --remote configs/nvim
            git add configs/nvim
            # Capture the commit information from the submodule
            SUBMODULE_SHORT_SHA=$(cd configs/nvim && git rev-parse --short HEAD)
            SUBMODULE_FULL_SHA=$(cd configs/nvim && git rev-parse HEAD)
            REPO_URL=$(cd configs/nvim && git config --get remote.origin.url | sed 's/\.git$//' | sed 's|git@github.com:|https://github.com/|')
            LATEST_COMMIT_MESSAGE=$(cd configs/nvim && git log -1 --pretty=%B)

            # Commit with the new message
            git commit -m "chore(neovim): update submodule to ${SUBMODULE_SHORT_SHA}

            Triggered by commit:
            ${LATEST_COMMIT_MESSAGE}
            
            View changes: ${REPO_URL}/commit/${SUBMODULE_FULL_SHA}"
            git push
          else
            echo "Submodule is already up to date"
          fi
