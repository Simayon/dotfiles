name: Update Neovim Submodule

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  repository_dispatch:
    types: [neovim-updated]
  workflow_dispatch:

jobs:
  update-submodule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Git config
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Update submodule
        env:
          TARGET_SHA: ${{ github.event.client_payload.sha }}
          COMMIT_MSG: ${{ github.event.client_payload.message }}
          SHORT_SHA: ${{ github.event.client_payload.short_sha }}
        run: |
          # Initialize submodules
          git submodule update --init --recursive
          
          cd configs/nvim
          CURRENT_COMMIT=$(git rev-parse HEAD)
          
          if [ "${{ github.event_name }}" == "repository_dispatch" ] && [ ! -z "$TARGET_SHA" ]; then
            echo "Received repository dispatch event with target SHA: $TARGET_SHA"
            # Update to the specific commit from the dispatch event
            git fetch origin
            git checkout $TARGET_SHA
            NEW_COMMIT=$TARGET_SHA
            COMMIT_MESSAGE="$COMMIT_MSG"
            COMMIT_SHORT="$SHORT_SHA"
          else
            # Regular update to latest main
            git fetch origin main
            git checkout origin/main
            NEW_COMMIT=$(git rev-parse HEAD)
            COMMIT_MESSAGE=$(git log --format=%B -n 1 $NEW_COMMIT)
            COMMIT_SHORT=$(git rev-parse --short $NEW_COMMIT)
          fi
          
          echo "Current commit: $CURRENT_COMMIT"
          echo "New commit: $NEW_COMMIT"
          
          if [ "$CURRENT_COMMIT" != "$NEW_COMMIT" ]; then
            cd ../..
            echo "Updating submodule reference in parent repository..."
            git add configs/nvim
            git commit -m "chore(nvim): update submodule to ${COMMIT_SHORT}

            Original commit message:
            ${COMMIT_MESSAGE}
            
            Link to changes: https://github.com/Simayon/neovim-dotfiles/commit/${NEW_COMMIT}"
            
            echo "Pushing changes..."
            git push
          else
            echo "No updates needed - submodule is at latest commit"
          fi
