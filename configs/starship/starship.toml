# ~/.config/starship.toml

# A minimal left prompt
# format = """$username $localip
#$directory$package$git_branch$git_commit$git_status$git_state $cmd_duration $jobs
#  $character"""

format = """$python$git_branch$git_commit$git_status$git_state $jobs
  $character"""

###############################
right_format = """$directory
$status
$battery
"""

# format = """
# [┌─user───❯](bold blue) $username
# [│─system─❯](bold yellow) $hostname
# [│─project❯](bold red) $directory$rust$git_branch$git_status$package$golang$terraform$docker_context$python$docker_context$nodejs
# [└─cmd────❯](bold green)
# """

# format= """\
# [╭╴](bold 238)$username[ ](bold #8ae6fa)$hostname$directory\
# $all[╰](bold 238)$character"""

# move the rest of the prompt to the right

## Use custom format
# format = '''
# [┌───────────────────](bold green)
# [│](bold green)$directory
# [└─](bold green) '''

# Wait 10 milliseconds for starship to check files under the current directory.
scan_timeout = 1

# Timeout for running long commands
command_timeout = 10

# Disable the blank line at the start of the prompt
add_newline = false

palette = 'foo'

# A continuation prompt that displays two filled-in arrows
continuation_prompt = '▶▶ '

# Define custom colors
[palettes.foo]
blue = '21'
# Define new color
mustard = '#af8700'

[battery]
disabled =false
full_symbol = '🔋 '
charging_symbol = '⚡️ '
discharging_symbol = ' '
format = '[$symbol$percentage]($style)'

[[battery.display]]
threshold = 100
style = 'bold yellow'

[[battery.display]]
threshold = 10
style = 'bold red'

[character]
success_symbol = '[](bold green) '
error_symbol = '[x](bold red) '

[directory]
truncation_length = 30
truncate_to_repo = true
truncation_symbol = '.../'
style = "yellow"
home_symbol = "~"
use_logical_path = true
format = "[$path]($style)[$read_only]($read_only_style) "

[jobs]
disabled = false
symbol = '>> '
number_threshold = 1
symbol_threshold = 1
format = '[$symbol $number job]($style)'

[git_branch]
disabled = false
symbol = '🌱 '
style = 'bold purple'
only_attached = false
format = 'on [$symbol$branch(:$remote_branch)]($style)'

[git_commit]
disabled = false
commit_hash_length = 7
style = 'bold orange'
only_detached = true
tag_symbol = '🔖 '
format = '[\($hash$tag\)]($style)'

[git_state]
disabled = false
rebase = ' Rebasing '
merge = ' Merging '
revert = ' Reverting '
cherry_pick = ' Cherry - Picking'
bisect = ' Bisecting '
am = ' Apply Mailbox '
am_or_rebase = ' AM/Rebase '
style = 'bold yellow'
format = '\([$state( $progress_current/$progress_total)]($style)\) '

[git_status]
disabled = false
conflicted = '🏳'
ahead = '🏎💨'
behind = '😰'
# diverged = '😵'
up_to_date = '✓'
untracked = '🤷'
stashed = '📦'
modified = '📝'
staged = '[++\($count\)](green)'
renamed = '👅'
deleted = '🗑'
# ahead = '⇡${count}'
diverged = '⇕⇡${ahead_count}⇣${behind_count}'
# behind = '⇣${count}'
format = '([\[$all_status$ahead_behind\]]($style) )'

[hostname]
ssh_only = false
format = '[$hostname](bold yellow) '
trim_at = "."
disabled = false

[localip]
disabled = false
ssh_only = false
format = '[$localipv4](bold red) '

[bun]
format = '\[[$symbol($version)]($style)\]'

[c]
format = '\[[$symbol($version(-$name))]($style)\]'

[cmake]
format = '\[[$symbol($version)]($style)\]'

[cmd_duration]
format = '\[[⏱ $duration]($style)\]'

[conda]
format = '\[[$symbol$environment]($style)\]'

[dart]
format = '\[[$symbol($version)]($style)\]'

[docker_context]
format = '\[[$symbol$context]($style)\]'

[dotnet]
format = '\[[$symbol($version)(🎯 $tfm)]($style)\]'

[elixir]
format = '\[[$symbol($version \(OTP $otp_version\))]($style)\]'

[erlang]
format = '\[[$symbol($version)]($style)\]'

[golang]
format = '\[[$symbol($version)]($style)\]'

[gradle]
format = '\[[$symbol($version)]($style)\]'

[java]
format = '\[[$symbol($version)]($style)\]'

[julia]
format = '\[[$symbol($version)]($style)\]'

[kotlin]
format = '\[[$symbol($version)]($style)\]'

[kubernetes]
format = '\[[$symbol$context( \($namespace\))]($style)\]'

[lua]
format = '\[[$symbol($version)]($style)\]'

[memory_usage]
format = '\[$symbol[$ram( | $swap)]($style)\]'

[meson]
format = '\[[$symbol$project]($style)\]'

[nix_shell]
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
format = '\[[$symbol($version)]($style)\]'

[os]
Ubuntu = "🎯 "
disabled = true
format = '\[[$symbol]($style)\]'

[status]
style = 'italic white'
symbol = '🔴'
not_executable_symbol = '🚫'
not_found_symbol = '🔍'
sigint_symbol = '🧱'
success_symbol = '🟢'
format = '[ $symbol $signal_name $maybe_int ]($style) '
map_symbol = true
disabled = false

[package]
format = '\[[$symbol$version]($style)\]'

[perl]
format = '\[[$symbol($version)]($style)\]'

[python]
format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'

[ruby]
format = '\[[$symbol($version)]($style)\]'

[rust]
format = '\[[$symbol($version)]($style)\]'

[scala]
format = '\[[$symbol($version)]($style)\]'

[sudo]
format = '\[[as $symbol]($style)\]'

[terraform]
format = '\[[$symbol$workspace]($style)\]'

[time]
format = '\[[$time]($style)\]'

[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style) "
disabled = false
show_always = true

#[username]
#style_user = "white bold"
#style_root = "black bold"
#format = "[$user]($style) "
#disabled = false
#show_always = true

[zig]
format = '\[[$symbol($version)]($style)\]'
