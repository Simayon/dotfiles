# Oh My Zsh Configuration
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="xiong-chiamiov-plus"

# Plugins
plugins=(
    git
    zsh-autosuggestions
    zsh-syntax-highlighting
    web-search
    fzf
)

# Aliases
alias vim=nvim
alias cat='batcat'
alias logout='pkill -KILL -u $USER'
alias please=please
alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'
alias cdl=cd_ls
alias mcd=mkdir_cd_dir
alias ..='cd ..'
alias ...='cd ../../'
alias fadd='git add $(git status -s | cut -c4- | sed "s/\"//g" | fzf)'

# Color support
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# eza (modern ls replacement)
if command -v eza &> /dev/null; then
    alias ls='eza --color=auto'
    alias ll='eza -la'
    alias ltree='eza --tree'
    alias lg='eza --git-ignore'
    alias la='eza -a'
    alias l='eza'
    alias ld='eza -D'
    alias lf='eza -f'
    alias lm='eza -m'
    alias lo='eza -O'
    alias lr='eza -R'
    alias lx='eza -x'
    alias lh='eza -lh'
    alias lk='eza -lk'
    alias lS='eza -lS'
    alias lt='eza -l --sort=modified'
    alias lc='eza -lc'
    alias lu='eza -lu'
    alias lU='eza -lU'
    alias lX='eza -lX'
    alias lw='eza -lw'
    alias lsd='eza -D'
    alias lsf='eza -f'
    alias lsr='eza -R'
    alias lss='eza -s'
    alias lsS='eza -S'
    alias lstree='eza -T'
    alias lsx='eza -x'
    alias lsa='eza -a'
    alias lsl='eza -l'
    alias lsla='eza -la'
    alias lsm='eza -m'
    alias lsn='eza -n'
    alias lso='eza -o'
    alias lsp='eza -p'
    alias lsb='eza -b'
    alias lsg='eza -g'
    alias lsG='eza -G'
    alias lsi='eza -i'
    alias lsh='eza -h'
    alias lsk='eza -k'
    alias lsL='eza -L'
    alias lsU='eza -U'
    alias lsX='eza -X'
    alias lsw='eza -w'
    alias lsF='eza -F'
    alias lsH='eza -H'
    alias lsI='eza -I'
    alias lsN='eza -N'
    alias lsQ='eza -Q'
    alias lsZ='eza -Z'
    alias lsd='eza -d'
    alias lsD='eza -D'
    alias lsf='eza -f'
    alias lsF='eza -F'
    alias lsg='eza -g'
    alias lsG='eza -G'
    alias lsh='eza -h'
    alias lsH='eza -H'
    alias lsi='eza -i'
    alias lsI='eza -I'
    alias lsk='eza -k'
    alias lsL='eza -L'
    alias lsm='eza -m'
    alias lsn='eza -n'
    alias lsN='eza -N'
    alias lso='eza -o'
    alias lsp='eza -p'
    alias lsQ='eza -Q'
    alias lsr='eza -r'
    alias lsR='eza -R'
    alias lss='eza -s'
    alias lsS='eza -S'
    alias lst='eza --sort=modified'
    alias lsT='eza -T'
    alias lsu='eza -u'
    alias lsU='eza -U'
    alias lsw='eza -w'
    alias lsx='eza -x'
    alias lsX='eza -X'
    alias lsZ='eza -Z'
else
    # Fallback to standard ls aliases if eza is not available
    alias ls='ls --color=auto'
    alias ll='ls -alF'
    alias la='ls -A'
    alias l='ls -CF'
fi

# Navigation Functions
function cd_ls() {
    cd "$1"
    if [ $? -eq 0 ]; then
        ls -A
    fi
}

function mkdir_cd_dir() {
    mkdir "$1"
    cd "$1"
}

# Completion
# Note: The following completion is for bash, not zsh
# Commented out to prevent errors
# complete -F cd_completion cdl
# cd_completion() {
#     local dir_list
#     dir_list=$(compgen -d -- "$1")
#     COMPREPLY=($dir_list)
# }

# Enable better directory completion
autoload -Uz compinit
compinit

# Configure completion system
zstyle ':completion:*' completer _extensions _complete _approximate
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle ':completion:*' menu select
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:cd:*' tag-order local-directories directory-stack path-directories
zstyle ':completion:*:*:cd:*:directory-stack' menu yes select
zstyle ':completion:*:-tilde-:*' group-order 'named-directories' 'path-directories' 'users' 'expand'
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Please Function
function please() {
    if [ -n "$HISTFILE" ] && [ "$HISTCMD" -gt 1 ]; then
        local last_cmd=$(fc -ln -1 | sed 's/^[ ]*//g' | sed 's/^sudo //g')
        if [[ "$last_cmd" == "please" ]]; then
            echo "No previous command to execute!"
            return 1
        fi
        \cat << "EOF"
        _____  *    * *    * * *_
        |  __ \| |  | | |  | | | | |
        | |  | | |  | | |__| | | | |
        | |  | | |  | |  __  | | | |
        | |__| | |__| | |  | |_|_|_|
        |_____/ \____/|_|  |_(_|_|_)
        just this one time...
EOF
        sudo $last_cmd
    else
        echo "No previous command found in history!"
    fi
}

# Git Repository Greeter
last_repository=
function check_directory_for_new_repository() {
    current_repository=$(git rev-parse --show-toplevel 2> /dev/null)
    if [ "$current_repository" ] && \
       [ "$current_repository" != "$last_repository" ]; then
        onefetch
    fi
    last_repository=$current_repository
}

# Override cd command
function cd() {
    builtin cd "$@"
    check_directory_for_new_repository
}

# Initial repository check
check_directory_for_new_repository

# Source configurations
# Check if Oh My Zsh exists before sourcing
if [ -f "$ZSH/oh-my-zsh.sh" ]; then
    source "$ZSH/oh-my-zsh.sh"
fi

# Check if intelli-shell exists before sourcing
if [ -n "$INTELLI_HOME" ] && [ -f "$INTELLI_HOME/bin/intelli-shell.sh" ]; then
    source "$INTELLI_HOME/bin/intelli-shell.sh"
fi

# Enhanced history search with fzf
# ----------------------------
# Setup key bindings for history search

# Use fzf to search history when pressing Ctrl+R
fzf-history-widget() {
  local selected num
  setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null
  selected=( $(fc -rl 1 | 
    awk '{ cmd=$0; sub(/^[ ]*[0-9]+\*?[ ]+/, "", cmd); if (!seen[cmd]++) print $0 }' | 
    FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --scheme=history --bind=ctrl-r:toggle-sort,ctrl-z:ignore $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m" $(__fzfcmd)) )
  local ret=$?
  if [ -n "$selected" ]; then
    num=$selected[1]
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
    fi
  fi
  zle reset-prompt
  return $ret
}
zle     -N            fzf-history-widget
bindkey '^R'          fzf-history-widget

# Helper function to determine fzf command
__fzfcmd() {
  [ -n "$TMUX_PANE" ] && { [ "${FZF_TMUX:-0}" != 0 ] || [ -n "$FZF_TMUX_OPTS" ]; } &&
    echo "fzf-tmux ${FZF_TMUX_OPTS:--d${FZF_TMUX_HEIGHT:-40%}} -- " || echo "fzf"
}

# Configure fzf default options
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border --inline-info --preview 'echo {}' --preview-window=hidden"
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window=up:3:wrap --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)'"

# Initialize zoxide if installed
if command -v zoxide &> /dev/null; then
    eval "$(zoxide init zsh)"
    # Add custom aliases for zoxide
    alias cd='z'
    alias cdi='zi'
    alias cda='zoxide add'
    alias cdq='zoxide query'
    alias cdr='zoxide remove'
    alias cdl='zoxide list'
    alias cdf='cd $(find * -type d | fzf)'
fi

# Check if starship exists before initializing
if command -v starship &> /dev/null; then
    eval "$(starship init zsh)"
fi

# Ensure colors are enabled for the terminal
export CLICOLOR=1
export LSCOLORS=ExGxBxDxCxEgEdxbxgxcxd
