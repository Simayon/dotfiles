gui:
  # Custom status panel format
  statusPanelView: allBranchesLog
  skipRewordInEditorWarning: false
  sidePanelWidth: 0.26
  statusFormat:
    statusPanelFormat: "{{.BranchName}} ({{.NumCommitsBehind}}â†“Â·{{.NumCommitsAhead}}â†‘) - {{.RepoName}} [{{.WorkingTreeState}}] {{.UserName}}"
  theme:
    # Catppuccin Mocha theme
    activeBorderColor:
      - "#89b4fa" # Blue
      - bold
    inactiveBorderColor:
      - "#cdd6f4" # Text
    searchingActiveBorderColor:
      - "#89dceb" # Sky
      - bold
    optionsTextColor:
      - "#89b4fa" # Blue
    selectedLineBgColor:
      - "#313244" # Surface0
    inactiveViewSelectedLineBgColor:
      - "#45475a" # Surface1
    cherryPickedCommitFgColor:
      - "#89b4fa" # Blue
    cherryPickedCommitBgColor:
      - "#89dceb" # Sky
    markedBaseCommitFgColor:
      - "#89b4fa" # Blue
    markedBaseCommitBgColor:
      - "#f9e2af" # Yellow
    unstagedChangesColor:
      - "#f38ba8" # Red
    defaultFgColor:
      - "#cdd6f4" # Text

  nerdFontsVersion: "3"

  showRandomTip: true
  showCommandLog: false
  showBottomLine: false

  # Branch color patterns
  branchColorPatterns:
    '^master$': '#89b4fa' # Blue for master branch
    '^develop$': '#f9e2af' # Yellow for develop branch
    '^feature/': '#a6e3a1' # Green for feature branches
    '^bugfix/': '#f38ba8' # Red for bugfix branches
    '^hotfix/': '#fab387' # Orange for hotfix branches

  # Config relating to the spinner - cars and traffic lights animation
  spinner:
    frames:
      - "ðŸš—       ðŸš¦ "
      - " ðŸš—      ðŸš¦ "
      - "  ðŸš—     ðŸš¦ "
      - "   ðŸš—    ðŸš¦ "
      - "    ðŸš—   ðŸš¦ "
      - "     ðŸš—  ðŸš¦ "
      - "      ðŸš— ðŸš¦ "
      - "       ðŸš—ðŸš¦ "
      - "       ðŸš—ðŸš¥ "
      - "       ðŸš—ðŸš§ "
      - "        ðŸš— "
      - "         ðŸš—"
    rate: 60

confirmOnQuit: true
promptToReturnFromSubprocess: false

keybindings:
    files:
        stashAllChanges: <disabled>
    branches:
        createNewBranchWithName: 'b'

customCommands:
  - key: "P"
    command: 'bash -c "if [[ $(git rev-parse --show-toplevel) =~ ^$HOME/Projects/WORK ]]; then echo Pushing to Gerrit... && git push gerrit HEAD:refs/for/master; else echo Pushing to origin... && git push; fi"'
    context: "localBranches"
    description: "Push (Normal or Gerrit based on directory)"
    loadingText: "Pushing Changes..."
    prompts:
      - type: 'confirm'
        title: 'Push Confirmation'
        body: 'Pushing Changes...'

  - key: "p"
    command: 'bash -c "if [[ $(git rev-parse --show-toplevel) =~ ^$HOME/Projects/WORK ]]; then git pull --rebase gerrit; else git pull --rebase origin; fi"'
    context: "localBranches"
    description: "Pull (Rebase) from Gerrit or Origin based on directory"
    loadingText: "Pulling latest changes..."

  - key: "G"
    description: "Push (Gerrit or Origin)"
    context: "localBranches"
    loadingText: "Pushing changes..."
    command: "git push {{.Form.Remote}} HEAD:refs/for/master"
    prompts:
      - type: 'menu'
        title: 'Select Remote'
        key: 'Remote'
        options:
          - value: 'gerrit'
            name: 'Push to Gerrit'
            description: 'Push changes to Gerrit for code review'
          - value: 'origin'
            name: 'Push to Origin'
            description: 'Push changes directly to the main repository'

  - key: "B"
    description: "Create new branch (with type)"
    context: "localBranches"
    loadingText: "Creating new branch..."
    command: |
      bash -c 'if [ -z "{{.Form.BranchName}}" ]; then
        echo "Error: Branch name cannot be empty" >&2
        exit 1
      fi
      
      if [ "{{.Form.BranchType}}" = "" ]; then
        PREFIX="{{.Form.CustomPrefix}}"
        if [ -n "$PREFIX" ] && [[ ! "$PREFIX" =~ /$ ]]; then
          PREFIX="$PREFIX/"
        fi
        git checkout -b "${PREFIX}{{.Form.BranchName}}"
      else
        git checkout -b "{{.Form.BranchType}}/{{.Form.BranchName}}"
      fi'
    prompts:
      - type: 'menu'
        title: 'Select branch type'
        key: 'BranchType'
        options:
          - value: 'feature'
            name: 'Feature Branch'
            description: 'For new features and enhancements'
          - value: 'bugfix'
            name: 'Bugfix Branch'
            description: 'For fixing bugs and issues'
          - value: 'hotfix'
            name: 'Hotfix Branch'
            description: 'For critical fixes that need immediate attention'
          - value: ''
            name: 'Custom Branch'
            description: 'For custom branch types'
      - type: 'input'
        title: 'Enter custom prefix (optional):'
        key: 'CustomPrefix'
        whenPrompt: '{{ eq .Form.BranchType "" }}'
      - type: 'input'
        title: 'Enter branch name (without prefix):'
        key: 'BranchName'

  - key: "o"
    command: "xdg-open ."
    context: "global"
    description: "Open repository in file manager"

  - key: "s"
    command: "git stash push -m '{{.Form.StashMessage}}'"
    context: "files"
    description: "Stash changes with message"
    prompts:
      - type: "input"
        title: "Enter stash message:"
        key: "StashMessage"
    loadingText: "Stashing changes..."

  - key: "<c-g>"
    command: "/home/simayon/.config/lazygit/git-pretty-graph"
    context: "global"
    description: "Show Git graph"
    loadingText: "Loading git graph..."
    showOutput: true
    streamOutput: true
    scrollOutputDown: false

git:
  paging:
    colorArg: always
    pager: delta --dark --paging=never --line-numbers  --hyperlinks --hyperlinks-file-link-format="lazygit-edit://{path}{line}"
